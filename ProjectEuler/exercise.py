#If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.
#Find the sum of all the multiples of 3 or 5 below 1000.
mul = 0
for i in range(1000):
    mul3 = i%3
    mul5 = i%5
    if mul3 == 0 or mul5 == 0:
        mul = mul + i
print(mul)

#Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
#1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
total=0
def fib(n):
    fibo = []
    for i in range(1,101):
        if i<=2:
            fibo.append(1)
        if i>2:
            x = fibo[i-3]
            y = fibo[i-2]
            z = x + y
            fibo.append(z)
            
    return fibo

num = fib(100)
print(num)

total = 0
i=0
while num[i]<4000000:
    if num[i]%2==0:
        total = total + num[i]
    i=i+1
print(total)

#The prime factors of 13195 are 5, 7, 13 and 29.
#What is the largest prime factor of the number 600851475143 ?
def Largest_Prime_Factor(n):
    prime_factor = 1
    i = 2

    while i <= n / i:
        if n % i == 0:
            prime_factor = i
            n /= i
        else:
            i += 1

    if prime_factor < n:
        prime_factor = n

    return prime_factor

print(Largest_Prime_Factor(600851475143 ))